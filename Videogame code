#Ping Pong creado por Pau Codina 

import tkinter as tk

# Creamos la ventana donde se ejecutará el videojuego
root = tk.Tk()
root.title("Ping Pong UPC")

# Modificamos el tamaño y el color del fondo de la ventana
canvas_width, canvas_height = 800, 600
canvas = tk.Canvas(root, width = canvas_width, height = canvas_height, bg = "black")
canvas.pack()

# Creamos las propiedades de la pelota
ball_radius = 20
ball_color = "red"
ball_pos = [canvas_width // 2, canvas_height // 2]
ball_vel = [5, 5]  # Velocidad en ambas direcciones (x, y)

# Creamos las propiedades de la plataforma
platform_width = 20
platform_height = 100
platform_color = "blue"
platform_x = 50  # Distáncia con la pared izquierda
platform_y = canvas_height // 2 - platform_height // 2
platform_speed = 30

# Creamos la pelota
ball = canvas.create_oval(ball_pos[0] - ball_radius, ball_pos[1] - ball_radius,
                          ball_pos[0] + ball_radius, ball_pos[1] + ball_radius,
                          fill=ball_color)

# Creamos la plataforma
platform = canvas.create_rectangle(platform_x, platform_y,
                                   platform_x + platform_width, platform_y + platform_height,
                                   fill=platform_color)

# Creamos la función que permite el movimiento de la pelota
def move_ball():
    global ball_pos, ball_vel

    # Actualizamos el movimiento de la pelota
    ball_pos[0] += ball_vel[0]
    ball_pos[1] += ball_vel[1]

    # Generamos físicas en las paredes para que la pelota rebote
    if ball_pos[0] <= ball_radius or ball_pos[0] >= canvas_width - ball_radius:
        ball_vel[0] = -ball_vel[0]
    if ball_pos[1] <= ball_radius or ball_pos[1] >= canvas_height - ball_radius:
        ball_vel[1] = -ball_vel[1]

    # Actualizamos la posición de la pelota en la ventana
    canvas.coords(ball, ball_pos[0] - ball_radius, ball_pos[1] - ball_radius,
                  ball_pos[0] + ball_radius, ball_pos[1] + ball_radius)

    # Damos la orden de que se prepare el siguiente movimiento
    root.after(30, move_ball)

# Creamos el movimiento hacia arriba de la plataforma
def move_platform_up(event):
    global platform_y
    if platform_y > 0:
        platform_y -= platform_speed
        canvas.coords(platform, platform_x, platform_y,
                      platform_x + platform_width, platform_y + platform_height)

# Creamos el movimiento hacia abajo de la plataforma
def move_platform_down(event):
    global platform_y
    if platform_y < canvas_height - platform_height:
        platform_y += platform_speed
        canvas.coords(platform, platform_x, platform_y,
                      platform_x + platform_width, platform_y + platform_height)

# Designamos lñas teclas encargadas del movimiento de la plataforma
root.bind("<Up>", move_platform_up)
root.bind("<Down>", move_platform_down)

# Empezamos el movimiento de la pelota
move_ball()

# Loop principal del tkinter
root.mainloop()